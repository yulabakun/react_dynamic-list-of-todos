{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","utils/enums.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoSelected","onSelect","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","onFilterChange","onQueryChange","query","onClear","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","response","json","FilterBy","TodoModal","useState","todoLoading","setTodoLoading","todoUser","setTodoUser","useEffect","userId","givenUser","finally","undefined","href","email","name","App","All","filter","setFilter","setQuery","appliedQuery","setAppliedQuery","visibleTodos","setVisibleTodos","selectedTodo","setSelectedTodo","loading","setLoading","todosFromServer","searchQuery","filterCriteria","filteredTodos","lowerQuery","toLowerCase","includes","Active","Completed","filterTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f249099.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  todoSelected?: Todo;\n  onSelect: Dispatch<SetStateAction<Todo | undefined>>;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoSelected,\n  onSelect,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelect(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far',\n                    {\n                      'fa-eye': todoSelected?.id !== todo.id,\n                      'fa-eye-slash': todoSelected?.id === todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, {\n  Dispatch,\n  SetStateAction,\n} from 'react';\nimport { FilterBy } from '../../utils/enums';\n\ntype Props = {\n  onFilterChange: Dispatch<SetStateAction<FilterBy>>;\n  onQueryChange: (query: React.ChangeEvent<HTMLInputElement>) => void;\n  query: string;\n  onClear: () => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onFilterChange,\n  onQueryChange,\n  query,\n  onClear,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onFilterChange(event.target.value as FilterBy);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQueryChange(event)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClear}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(response => response.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, {\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useState,\n} from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  onSelect: Dispatch<SetStateAction<Todo | undefined>>;\n  todoSelected: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ onSelect, todoSelected }) => {\n  const [todoLoading, setTodoLoading] = useState(true);\n  const [todoUser, setTodoUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todoSelected.userId)\n      .then((givenUser) => {\n        setTodoUser(givenUser);\n      })\n      .finally(() => setTodoLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {todoLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoSelected.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelect(undefined)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoSelected.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={cn({\n                  'has-text-success': todoSelected.completed,\n                  'has-text-danger': !todoSelected.completed,\n                })}\n              >\n                {todoSelected.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${todoUser?.email}`}>\n                {todoUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterBy } from './utils/enums';\n\nfunction filterTodos(\n  todos: Todo[],\n  searchQuery: string,\n  filterCriteria: FilterBy,\n) {\n  let filteredTodos = [...todos];\n\n  if (searchQuery) {\n    const lowerQuery = searchQuery.toLowerCase();\n\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title.toLowerCase().includes(lowerQuery));\n  }\n\n  if (filterCriteria) {\n    if (filterCriteria === FilterBy.Active) {\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n    }\n\n    if (filterCriteria === FilterBy.Completed) {\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n    }\n  }\n\n  return filteredTodos;\n}\n\nexport const App: React.FC = () => {\n  const [filter, setFilter] = useState(FilterBy.All);\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>();\n  const [loading, setLoading] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLoading(true);\n    setQuery(event.target.value);\n\n    setTimeout(() => {\n      setAppliedQuery(event.target.value);\n    }, 1000);\n  };\n\n  const handleClearInputButton = () => {\n    setQuery('');\n    setAppliedQuery('');\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then((todosFromServer) => {\n        setVisibleTodos(filterTodos(todosFromServer, appliedQuery, filter));\n      })\n      .finally(() => setLoading(false));\n  }, [filter, appliedQuery]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterChange={setFilter}\n                onQueryChange={handleInputChange}\n                query={query}\n                onClear={handleClearInputButton}\n              />\n            </div>\n\n            <div className=\"block\">\n\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && visibleTodos.length > 0 && (\n                <TodoList\n                  todos={visibleTodos}\n                  todoSelected={selectedTodo}\n                  onSelect={setSelectedTodo}\n                />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          onSelect={setSelectedTodo}\n          todoSelected={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}